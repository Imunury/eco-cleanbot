"use client"

import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import { useEffect, useState } from 'react';
import './globals.css'

import Sidebar from './components/Sidebar';
import HeaderBar from './components/HeaderBar';
import RobotList from './components/RobotList';
import { ecobot_status_temp } from '@prisma/client';


const inter = Inter({ subsets: ['latin'] })

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {

  const [robotStatus, setRobotStatus] = useState<ecobot_status_temp[]>([]);

  useEffect(() => {

    const fetchData = async () => {
      try {
        const response = await fetch('/api/ecobot_status');
        const data = await response.json();
        setRobotStatus(data);
      } catch (error) {
        console.error("Failed to fetch data:", error);
      }
    };

    fetchData();

    const intervalId = setInterval(fetchData, 5000);

    return () => clearInterval(intervalId);
  }, []);

  useEffect(() => {
    const naverMapScript = document.createElement('script');
    naverMapScript.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${process.env.NEXT_PUBLIC_NAVER_MAP_API_KEY}`;
    naverMapScript.onload = () => {
      if (window.naver && window.naver.maps) {
        console.log('Naver Map API loaded');
      }
    };
    document.head.appendChild(naverMapScript);
  })

  return (
    <html lang="en">
      <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">
        <body className='h-screen w-screen overflow-x-hidden'>
          {/* <body> */}
          <HeaderBar />
          <div className="flex h-full">
            <Sidebar />
            <RobotList robotStatus={robotStatus} />
            <main className='w-4/6 h-full'>{children}</main>
          </div>
        </body>
      </meta>
    </html >
  );
}
